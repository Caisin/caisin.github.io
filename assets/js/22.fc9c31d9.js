(window.webpackJsonp=window.webpackJsonp||[]).push([[22],{387:function(e,t,s){"use strict";s.r(t);var a=s(44),i=Object(a.a)({},(function(){var e=this,t=e.$createElement,s=e._self._c||t;return s("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[s("h1",{attrs:{id:"field-et-release"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#field-et-release"}},[e._v("#")]),e._v(" Field et release")]),e._v(" "),s("ol",[s("li",[e._v("Login to aideploy 172.21.164.205 aideploy / 1q1w1e1r\n2.cd bin / cmpk /")]),e._v(" "),s("li",[e._v('Manual synchronization code\nThe warehouse address of the business code: http://172.21.164.205:3000/, account password: git / git, find the modules that need to be synchronized manually, click "Synchronize Now" in the "Warehouse Settings" page, and refresh the page when prompted, Check "Last Sync Time", if the time is the current operation time, it means the synchronization was successful')]),e._v(" "),s("li",[e._v("./checkout-ams-source.py ./checkout-runtime-config.py ./checkout-library.py")]),e._v(" "),s("li",[e._v("Check ls ~ / dist / jars / no jars required ./build-all.py")]),e._v(" "),s("li",[e._v("Compile et ./build-et.py")]),e._v(" "),s("li",[e._v("Publishing et ./deploy-et.py requires a password: 1q1w1e1r")])]),e._v(" "),s("h1",{attrs:{id:"changsha-et-release"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#changsha-et-release"}},[e._v("#")]),e._v(" Changsha et release")]),e._v(" "),s("ol",[s("li",[e._v("Login to aideploy 10.13.3.18 aifet / 1qazXDR%")]),e._v(" "),s("li",[e._v("ssh deploy-cmpk@10.13.3.19\n3.cd bin / cmpk /")]),e._v(" "),s("li",[e._v("./checkout-ams-source.py ./checkout-runtime-config.py ./checkout-library.py")]),e._v(" "),s("li",[e._v("Check ls ~ / dist / jars / no jars required ./build-all.py")]),e._v(" "),s("li",[e._v("Compile et ./build-et.py")]),e._v(" "),s("li",[e._v("Publishing et ./deploy-et.py requires a password: 1qazXDR%")])]),e._v(" "),s("h1",{attrs:{id:"publish-account-management-web"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#publish-account-management-web"}},[e._v("#")]),e._v(" Publish account management web")]),e._v(" "),s("ol",[s("li",[e._v("Login to aideploy 172.21.164.205 aideploy / 1q1w1e1r\n2.cd bin / cmpk /")]),e._v(" "),s("li",[e._v('Manual synchronization code\nThe warehouse address of the business code: http://172.21.164.205:3000/, account password: git / git, find the modules that need to be synchronized manually, click "Synchronize Now" in the "Warehouse Settings" page, and refresh the page when prompted, Check "Last Sync Time", if the time is the current operation time, it means the synchronization was successful')]),e._v(" "),s("li",[e._v("./checkout-ams-source.py ./checkout-runtime-config.py ./checkout-library.py")]),e._v(" "),s("li",[e._v("Build the web ./build-ams-web.py")]),e._v(" "),s("li",[e._v("Publish web ./deploy-amsweb.py")])]),e._v(" "),s("h1",{attrs:{id:"live-shell-start-background-process"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#live-shell-start-background-process"}},[e._v("#")]),e._v(" Live shell start background process")]),e._v(" "),s("ol",[s("li",[e._v("Login to aideploy 172.21.164.205 aideploy / 1q1w1e1r\n2.cd bin / cmpk /")]),e._v(" "),s("li",[e._v('Manual synchronization code\nThe warehouse address of the business code: http://172.21.164.205:3000/, account password: git / git, find the modules that need to be synchronized manually, click "Synchronize Now" in the "Warehouse Settings" page, and refresh the page when prompted, Check "Last Sync Time", if the time is the current operation time, it means the synchronization was successful')]),e._v(" "),s("li",[e._v("./checkout-ams-source.py ./checkout-runtime-config.py ./checkout-library.py")]),e._v(" "),s("li",[e._v("Check ls ~ / dist / jars / no jars required ./build-all.py")]),e._v(" "),s("li",[e._v("Compile et ./build-et.py")]),e._v(" "),s("li",[e._v("Login et host aisch 172.21.164.207 aisch / 1q1w1e1r")]),e._v(" "),s("li",[e._v("cd ~ / asset / bin")]),e._v(" "),s("li",[e._v("Update code ./updatecode.sh")]),e._v(" "),s("li",[e._v("Start WorkOrder ./startworkorder.sh taskcode channel")])]),e._v(" "),s("blockquote",[s("p",[e._v("Example: ./startworkorder.sh BUSI_TASK_10 0")])]),e._v(" "),s("ol",{attrs:{start:"10"}},[s("li",[e._v("Start Task ./starttask.sh taskcode channel")])]),e._v(" "),s("blockquote",[s("p",[e._v("Example: ./starttask.sh ScoreCalcTask 02 -pPROVINCE_CODE = 66 -pBILL_MONTH = 201906")])]),e._v(" "),s("ol",{attrs:{start:"11"}},[s("li",[e._v("We can write our individual tasks in a shell script, refer to ~ / asset / bin / busitask.sh, ~ / asset / bin / batchImportAll.sh")]),e._v(" "),s("li",[e._v("Log in ~ / logs")])])])}),[],!1,null,null,null);t.default=i.exports}}]);